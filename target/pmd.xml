<?xml version="1.0" encoding="UTF-8"?>
<pmd xmlns="http://pmd.sourceforge.net/report/2.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://pmd.sourceforge.net/report/2.0.0 http://pmd.sourceforge.net/report_2_0_0.xsd"
    version="6.13.0" timestamp="2020-08-26T11:28:08.519">
<file name="/Users/hrishi94/Github/los-entity-service/src/main/java/com/idexcel/cync/los/entity/common/constants/CoreConstants.java">
<violation beginline="5" endline="25" begincolumn="8" endcolumn="1" rule="ClassWithOnlyPrivateConstructorsShouldBeFinal" ruleset="Design" package="com.idexcel.cync.los.entity.common.constants" class="CoreConstants" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#classwithonlyprivateconstructorsshouldbefinal" priority="1">
A class which only has private constructors should be final
</violation>
<violation beginline="10" endline="10" begincolumn="29" endcolumn="55" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="CoreConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="11" endline="11" begincolumn="29" endcolumn="63" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="CoreConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="13" endline="13" begincolumn="29" endcolumn="60" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="CoreConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="14" endline="14" begincolumn="29" endcolumn="67" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="CoreConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="17" endline="17" begincolumn="29" endcolumn="67" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="CoreConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="18" endline="18" begincolumn="29" endcolumn="92" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="CoreConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="19" endline="19" begincolumn="29" endcolumn="106" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="CoreConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="21" endline="21" begincolumn="29" endcolumn="80" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="CoreConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="22" endline="22" begincolumn="29" endcolumn="92" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="CoreConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="23" endline="23" begincolumn="29" endcolumn="58" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="CoreConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
</file>
<file name="/Users/hrishi94/Github/los-entity-service/src/main/java/com/idexcel/cync/los/entity/common/constants/ErrorMessageConstants.java">
<violation beginline="10" endline="76" begincolumn="8" endcolumn="1" rule="ClassWithOnlyPrivateConstructorsShouldBeFinal" ruleset="Design" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#classwithonlyprivateconstructorsshouldbefinal" priority="1">
A class which only has private constructors should be final
</violation>
<violation beginline="15" endline="15" begincolumn="29" endcolumn="94" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="16" endline="16" begincolumn="29" endcolumn="82" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="17" endline="17" begincolumn="29" endcolumn="104" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="18" endline="18" begincolumn="29" endcolumn="90" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="19" endline="19" begincolumn="29" endcolumn="104" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="20" endline="20" begincolumn="29" endcolumn="104" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="21" endline="21" begincolumn="29" endcolumn="95" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="22" endline="22" begincolumn="29" endcolumn="95" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="23" endline="23" begincolumn="29" endcolumn="90" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="24" endline="24" begincolumn="29" endcolumn="116" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="25" endline="25" begincolumn="29" endcolumn="85" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="26" endline="26" begincolumn="29" endcolumn="79" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="27" endline="27" begincolumn="29" endcolumn="81" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="28" endline="28" begincolumn="29" endcolumn="91" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="29" endline="29" begincolumn="29" endcolumn="101" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="30" endline="30" begincolumn="29" endcolumn="81" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="31" endline="31" begincolumn="29" endcolumn="105" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="32" endline="32" begincolumn="29" endcolumn="90" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="33" endline="33" begincolumn="29" endcolumn="76" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="34" endline="34" begincolumn="29" endcolumn="92" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="35" endline="35" begincolumn="29" endcolumn="102" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="36" endline="36" begincolumn="29" endcolumn="95" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="37" endline="37" begincolumn="29" endcolumn="90" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="38" endline="38" begincolumn="29" endcolumn="93" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="39" endline="39" begincolumn="29" endcolumn="89" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="40" endline="40" begincolumn="29" endcolumn="93" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="41" endline="41" begincolumn="29" endcolumn="80" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="42" endline="42" begincolumn="29" endcolumn="85" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="43" endline="43" begincolumn="29" endcolumn="82" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="44" endline="44" begincolumn="29" endcolumn="71" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="45" endline="45" begincolumn="29" endcolumn="89" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="46" endline="46" begincolumn="29" endcolumn="85" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="47" endline="47" begincolumn="29" endcolumn="99" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="48" endline="48" begincolumn="29" endcolumn="94" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="49" endline="49" begincolumn="29" endcolumn="92" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="50" endline="50" begincolumn="29" endcolumn="93" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="51" endline="51" begincolumn="29" endcolumn="113" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="52" endline="52" begincolumn="29" endcolumn="105" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="53" endline="53" begincolumn="29" endcolumn="99" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="54" endline="54" begincolumn="29" endcolumn="97" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="55" endline="55" begincolumn="29" endcolumn="113" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="56" endline="56" begincolumn="29" endcolumn="80" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="57" endline="57" begincolumn="29" endcolumn="83" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="60" endline="60" begincolumn="29" endcolumn="62" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="61" endline="61" begincolumn="29" endcolumn="54" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="62" endline="62" begincolumn="29" endcolumn="51" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="63" endline="63" begincolumn="29" endcolumn="64" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="64" endline="64" begincolumn="29" endcolumn="71" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="65" endline="65" begincolumn="29" endcolumn="95" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="66" endline="66" begincolumn="29" endcolumn="89" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="67" endline="67" begincolumn="29" endcolumn="85" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="68" endline="68" begincolumn="29" endcolumn="97" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="69" endline="69" begincolumn="29" endcolumn="63" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="70" endline="70" begincolumn="29" endcolumn="46" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="71" endline="71" begincolumn="29" endcolumn="105" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="72" endline="72" begincolumn="29" endcolumn="88" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="73" endline="73" begincolumn="29" endcolumn="91" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="74" endline="74" begincolumn="29" endcolumn="94" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="ErrorMessageConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
</file>
<file name="/Users/hrishi94/Github/los-entity-service/src/main/java/com/idexcel/cync/los/entity/common/constants/LOSEntityConstants.java">
<violation beginline="3" endline="58" begincolumn="8" endcolumn="1" rule="DataClass" ruleset="Design" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#dataclass" priority="3">
The class 'LOSEntityConstants' is suspected to be a Data Class (WOC=0.000%, NOPA=46, NOAM=0, WMC=1)
</violation>
<violation beginline="5" endline="6" begincolumn="16" endcolumn="9" rule="UncommentedEmptyConstructor" ruleset="Documentation" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" method="LOSEntityConstants" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_documentation.html#uncommentedemptyconstructor" priority="3">
Document empty constructor
</violation>
<violation beginline="8" endline="8" begincolumn="29" endcolumn="66" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="9" endline="9" begincolumn="29" endcolumn="66" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="10" endline="10" begincolumn="29" endcolumn="62" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="11" endline="11" begincolumn="29" endcolumn="72" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="12" endline="12" begincolumn="29" endcolumn="73" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="13" endline="13" begincolumn="29" endcolumn="73" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="14" endline="14" begincolumn="29" endcolumn="90" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="15" endline="15" begincolumn="29" endcolumn="67" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="16" endline="16" begincolumn="29" endcolumn="66" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="17" endline="17" begincolumn="29" endcolumn="55" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="18" endline="18" begincolumn="29" endcolumn="51" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="19" endline="19" begincolumn="29" endcolumn="61" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="20" endline="20" begincolumn="29" endcolumn="64" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="21" endline="21" begincolumn="29" endcolumn="64" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="22" endline="22" begincolumn="29" endcolumn="58" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="23" endline="23" begincolumn="29" endcolumn="61" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="24" endline="24" begincolumn="29" endcolumn="56" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="25" endline="25" begincolumn="29" endcolumn="61" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="26" endline="26" begincolumn="29" endcolumn="57" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="27" endline="27" begincolumn="29" endcolumn="56" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="28" endline="28" begincolumn="29" endcolumn="62" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="29" endline="29" begincolumn="29" endcolumn="68" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="30" endline="30" begincolumn="29" endcolumn="67" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="31" endline="31" begincolumn="29" endcolumn="84" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="32" endline="32" begincolumn="29" endcolumn="81" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="33" endline="33" begincolumn="29" endcolumn="92" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="34" endline="34" begincolumn="29" endcolumn="77" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="35" endline="35" begincolumn="29" endcolumn="114" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="36" endline="36" begincolumn="29" endcolumn="62" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="37" endline="37" begincolumn="29" endcolumn="120" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="38" endline="38" begincolumn="29" endcolumn="77" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="39" endline="39" begincolumn="29" endcolumn="110" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="41" endline="41" begincolumn="29" endcolumn="55" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="42" endline="42" begincolumn="29" endcolumn="52" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="43" endline="43" begincolumn="29" endcolumn="63" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="44" endline="44" begincolumn="29" endcolumn="61" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="45" endline="45" begincolumn="29" endcolumn="58" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="46" endline="46" begincolumn="29" endcolumn="44" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="47" endline="47" begincolumn="29" endcolumn="61" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="48" endline="48" begincolumn="29" endcolumn="52" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="49" endline="49" begincolumn="29" endcolumn="74" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="50" endline="50" begincolumn="29" endcolumn="59" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="51" endline="51" begincolumn="29" endcolumn="58" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="52" endline="52" begincolumn="29" endcolumn="56" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="53" endline="53" begincolumn="29" endcolumn="62" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="54" endline="54" begincolumn="29" endcolumn="70" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.common.constants" class="LOSEntityConstants" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
</file>
<file name="/Users/hrishi94/Github/los-entity-service/src/main/java/com/idexcel/cync/los/entity/common/utils/ActivityLog.java">
<violation beginline="17" endline="71" begincolumn="26" endcolumn="1" rule="UseUtilityClass" ruleset="Design" package="com.idexcel.cync.los.entity.common.utils" class="ActivityLog" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#useutilityclass" priority="3">
All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
</violation>
</file>
<file name="/Users/hrishi94/Github/los-entity-service/src/main/java/com/idexcel/cync/los/entity/common/utils/ExternalAPICaller.java">
<violation beginline="32" endline="32" begincolumn="30" endcolumn="41" rule="ImmutableField" ruleset="Design" package="com.idexcel.cync.los.entity.common.utils" class="ExternalAPICaller" variable="restTemplate" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#immutablefield" priority="3">
Private field 'restTemplate' could be made final; it is only initialized in the declaration or constructor.
</violation>
<violation beginline="40" endline="74" begincolumn="16" endcolumn="9" rule="CyclomaticComplexity" ruleset="Design" package="com.idexcel.cync.los.entity.common.utils" class="ExternalAPICaller" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#cyclomaticcomplexity" priority="3">
The method 'post(String, T)' has a cyclomatic complexity of 10.
</violation>
<violation beginline="62" endline="62" begincolumn="33" endcolumn="84" rule="PreserveStackTrace" ruleset="Best Practices" package="com.idexcel.cync.los.entity.common.utils" class="ExternalAPICaller" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_bestpractices.html#preservestacktrace" priority="3">
New exception is thrown in catch block, original stack trace may be lost
</violation>
</file>
<file name="/Users/hrishi94/Github/los-entity-service/src/main/java/com/idexcel/cync/los/entity/dto/FinancialEntityDto.java">
<violation beginline="28" endline="101" begincolumn="8" endcolumn="1" rule="TooManyFields" ruleset="Design" package="com.idexcel.cync.los.entity.dto" class="FinancialEntityDto" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#toomanyfields" priority="3">
Too many fields
</violation>
</file>
<file name="/Users/hrishi94/Github/los-entity-service/src/main/java/com/idexcel/cync/los/entity/model/ChildEntityNode.java">
<violation beginline="22" endline="142" begincolumn="8" endcolumn="1" rule="DataClass" ruleset="Design" package="com.idexcel.cync.los.entity.model" class="ChildEntityNode" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#dataclass" priority="3">
The class 'ChildEntityNode' is suspected to be a Data Class (WOC=5.882%, NOPA=0, NOAM=14, WMC=19)
</violation>
<violation beginline="43" endline="43" begincolumn="17" endcolumn="46" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.model" class="ChildEntityNode" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="46" endline="46" begincolumn="17" endcolumn="31" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.model" class="ChildEntityNode" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="50" endline="50" begincolumn="17" endcolumn="44" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.model" class="ChildEntityNode" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="53" endline="53" begincolumn="17" endcolumn="32" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.model" class="ChildEntityNode" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="57" endline="57" begincolumn="17" endcolumn="45" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.model" class="ChildEntityNode" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="61" endline="61" begincolumn="17" endcolumn="39" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.model" class="ChildEntityNode" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="65" endline="65" begincolumn="17" endcolumn="47" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.model" class="ChildEntityNode" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="69" endline="69" begincolumn="17" endcolumn="53" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.model" class="ChildEntityNode" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="72" endline="72" begincolumn="17" endcolumn="38" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.model" class="ChildEntityNode" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="72" endline="72" begincolumn="25" endcolumn="30" rule="ImmutableField" ruleset="Design" package="com.idexcel.cync.los.entity.model" class="ChildEntityNode" variable="active" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#immutablefield" priority="3">
Private field 'active' could be made final; it is only initialized in the declaration or constructor.
</violation>
<violation beginline="75" endline="75" begincolumn="17" endcolumn="32" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.model" class="ChildEntityNode" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
</file>
<file name="/Users/hrishi94/Github/los-entity-service/src/main/java/com/idexcel/cync/los/entity/model/EntityNode.java">
<violation beginline="22" endline="135" begincolumn="8" endcolumn="1" rule="DataClass" ruleset="Design" package="com.idexcel.cync.los.entity.model" class="EntityNode" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#dataclass" priority="3">
The class 'EntityNode' is suspected to be a Data Class (WOC=5.882%, NOPA=0, NOAM=14, WMC=19)
</violation>
<violation beginline="44" endline="44" begincolumn="17" endcolumn="46" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.model" class="EntityNode" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="47" endline="47" begincolumn="17" endcolumn="31" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.model" class="EntityNode" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="51" endline="51" begincolumn="17" endcolumn="44" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.model" class="EntityNode" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="54" endline="54" begincolumn="17" endcolumn="32" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.model" class="EntityNode" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="58" endline="58" begincolumn="17" endcolumn="45" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.model" class="EntityNode" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="62" endline="62" begincolumn="18" endcolumn="35" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.model" class="EntityNode" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="66" endline="66" begincolumn="17" endcolumn="42" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.model" class="EntityNode" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="70" endline="70" begincolumn="17" endcolumn="50" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.model" class="EntityNode" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
</file>
<file name="/Users/hrishi94/Github/los-entity-service/src/main/java/com/idexcel/cync/los/entity/model/FinancialEntity.java">
<violation beginline="44" endline="111" begincolumn="8" endcolumn="1" rule="TooManyFields" ruleset="Design" package="com.idexcel.cync.los.entity.model" class="FinancialEntity" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#toomanyfields" priority="3">
Too many fields
</violation>
</file>
<file name="/Users/hrishi94/Github/los-entity-service/src/main/java/com/idexcel/cync/los/entity/model/ParentEntityNode.java">
<violation beginline="22" endline="137" begincolumn="8" endcolumn="1" rule="DataClass" ruleset="Design" package="com.idexcel.cync.los.entity.model" class="ParentEntityNode" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#dataclass" priority="3">
The class 'ParentEntityNode' is suspected to be a Data Class (WOC=5.882%, NOPA=0, NOAM=14, WMC=19)
</violation>
<violation beginline="43" endline="43" begincolumn="17" endcolumn="46" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.model" class="ParentEntityNode" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="46" endline="46" begincolumn="17" endcolumn="31" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.model" class="ParentEntityNode" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="50" endline="50" begincolumn="17" endcolumn="44" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.model" class="ParentEntityNode" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="53" endline="53" begincolumn="17" endcolumn="32" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.model" class="ParentEntityNode" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="57" endline="57" begincolumn="17" endcolumn="45" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.model" class="ParentEntityNode" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="61" endline="61" begincolumn="17" endcolumn="40" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.model" class="ParentEntityNode" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="65" endline="65" begincolumn="17" endcolumn="48" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.model" class="ParentEntityNode" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="69" endline="69" begincolumn="17" endcolumn="50" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.model" class="ParentEntityNode" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="72" endline="72" begincolumn="17" endcolumn="38" rule="FieldDeclarationsShouldBeAtStartOfClass" ruleset="Code Style" package="com.idexcel.cync.los.entity.model" class="ParentEntityNode" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_codestyle.html#fielddeclarationsshouldbeatstartofclass" priority="3">
Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
</violation>
<violation beginline="72" endline="72" begincolumn="25" endcolumn="30" rule="ImmutableField" ruleset="Design" package="com.idexcel.cync.los.entity.model" class="ParentEntityNode" variable="active" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#immutablefield" priority="3">
Private field 'active' could be made final; it is only initialized in the declaration or constructor.
</violation>
</file>
<file name="/Users/hrishi94/Github/los-entity-service/src/main/java/com/idexcel/cync/los/entity/multitenant/MultitenantConnectionProvider.java">
<violation beginline="42" endline="42" begincolumn="33" endcolumn="117" rule="PreserveStackTrace" ruleset="Best Practices" package="com.idexcel.cync.los.entity.multitenant" class="MultitenantConnectionProvider" method="selectDataSource" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_bestpractices.html#preservestacktrace" priority="3">
New exception is thrown in catch block, original stack trace may be lost
</violation>
</file>
<file name="/Users/hrishi94/Github/los-entity-service/src/main/java/com/idexcel/cync/los/entity/service/impl/ConfigLookupServiceImpl.java">
<violation beginline="24" endline="24" begincolumn="40" endcolumn="61" rule="ImmutableField" ruleset="Design" package="com.idexcel.cync.los.entity.service.impl" class="ConfigLookupServiceImpl" variable="configLookupRepository" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#immutablefield" priority="3">
Private field 'configLookupRepository' could be made final; it is only initialized in the declaration or constructor.
</violation>
<violation beginline="25" endline="25" begincolumn="41" endcolumn="63" rule="ImmutableField" ruleset="Design" package="com.idexcel.cync.los.entity.service.impl" class="ConfigLookupServiceImpl" variable="losConfigTypeRepository" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#immutablefield" priority="3">
Private field 'losConfigTypeRepository' could be made final; it is only initialized in the declaration or constructor.
</violation>
<violation beginline="41" endline="41" begincolumn="53" endcolumn="105" rule="UseLocaleWithCaseConversions" ruleset="Error Prone" package="com.idexcel.cync.los.entity.service.impl" class="ConfigLookupServiceImpl" method="findConfigDetails" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_errorprone.html#uselocalewithcaseconversions" priority="3">
When doing a String.toLowerCase()/toUpperCase() call, use a Locale
</violation>
</file>
<file name="/Users/hrishi94/Github/los-entity-service/src/main/java/com/idexcel/cync/los/entity/service/impl/CountryLookupServiceImpl.java">
<violation beginline="19" endline="19" begincolumn="41" endcolumn="63" rule="ImmutableField" ruleset="Design" package="com.idexcel.cync.los.entity.service.impl" class="CountryLookupServiceImpl" variable="countryLookupRepository" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#immutablefield" priority="3">
Private field 'countryLookupRepository' could be made final; it is only initialized in the declaration or constructor.
</violation>
</file>
<file name="/Users/hrishi94/Github/los-entity-service/src/main/java/com/idexcel/cync/los/entity/service/impl/EntityRelationshipTypeServiceImpl.java">
<violation beginline="44" endline="1056" begincolumn="8" endcolumn="1" rule="ExcessiveClassLength" ruleset="Design" package="com.idexcel.cync.los.entity.service.impl" class="EntityRelationshipTypeServiceImpl" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#excessiveclasslength" priority="3">
Avoid really long classes.
</violation>
<violation beginline="44" endline="1056" begincolumn="8" endcolumn="1" rule="GodClass" ruleset="Design" package="com.idexcel.cync.los.entity.service.impl" class="EntityRelationshipTypeServiceImpl" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#godclass" priority="3">
Possible God Class (WMC=90, ATFD=182, TCC=19.520%)
</violation>
<violation beginline="44" endline="1056" begincolumn="8" endcolumn="1" rule="ModifiedCyclomaticComplexity" ruleset="Design" package="com.idexcel.cync.los.entity.service.impl" class="EntityRelationshipTypeServiceImpl" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#modifiedcyclomaticcomplexity" priority="3">
The class 'EntityRelationshipTypeServiceImpl' has a Modified Cyclomatic Complexity of 3 (Highest = 10).
</violation>
<violation beginline="44" endline="1056" begincolumn="8" endcolumn="1" rule="StdCyclomaticComplexity" ruleset="Design" package="com.idexcel.cync.los.entity.service.impl" class="EntityRelationshipTypeServiceImpl" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#stdcyclomaticcomplexity" priority="3">
The class 'EntityRelationshipTypeServiceImpl' has a Standard Cyclomatic Complexity of 3 (Highest = 10).
</violation>
<violation beginline="44" endline="1056" begincolumn="8" endcolumn="1" rule="CyclomaticComplexity" ruleset="Design" package="com.idexcel.cync.los.entity.service.impl" class="EntityRelationshipTypeServiceImpl" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#cyclomaticcomplexity" priority="3">
The class 'EntityRelationshipTypeServiceImpl' has a total cyclomatic complexity of 90 (highest 10).
</violation>
<violation beginline="44" endline="1056" begincolumn="89" endcolumn="1" rule="TooManyMethods" ruleset="Design" package="com.idexcel.cync.los.entity.service.impl" class="EntityRelationshipTypeServiceImpl" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#toomanymethods" priority="3">
This class has too many methods, consider refactoring it.
</violation>
<violation beginline="196" endline="200" begincolumn="64" endcolumn="100" rule="ExcessiveParameterList" ruleset="Design" package="com.idexcel.cync.los.entity.service.impl" class="EntityRelationshipTypeServiceImpl" method="checkEntityIdsList" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#excessiveparameterlist" priority="3">
Avoid long parameter lists.
</violation>
<violation beginline="260" endline="266" begincolumn="33" endcolumn="33" rule="CollapsibleIfStatements" ruleset="Design" package="com.idexcel.cync.los.entity.service.impl" class="EntityRelationshipTypeServiceImpl" method="listAPILevelTwoData" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#collapsibleifstatements" priority="3">
These nested if statements could be combined
</violation>
<violation beginline="350" endline="353" begincolumn="38" endcolumn="61" rule="ExcessiveParameterList" ruleset="Design" package="com.idexcel.cync.los.entity.service.impl" class="EntityRelationshipTypeServiceImpl" method="parentNotPresent" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#excessiveparameterlist" priority="3">
Avoid long parameter lists.
</violation>
<violation beginline="420" endline="436" begincolumn="17" endcolumn="9" rule="CyclomaticComplexity" ruleset="Design" package="com.idexcel.cync.los.entity.service.impl" class="EntityRelationshipTypeServiceImpl" method="getLevelOneEntityData" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#cyclomaticcomplexity" priority="3">
The method 'getLevelOneEntityData(String, List, List, CommercialEntity, EntityRelationshipType)' has a cyclomatic complexity of 10.
</violation>
<violation beginline="452" endline="485" begincolumn="16" endcolumn="9" rule="CyclomaticComplexity" ruleset="Design" package="com.idexcel.cync.los.entity.service.impl" class="EntityRelationshipTypeServiceImpl" method="updateEntityRelaton" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#cyclomaticcomplexity" priority="3">
The method 'updateEntityRelaton(Long, EntityRelationshipType)' has a cyclomatic complexity of 13.
</violation>
<violation beginline="494" endline="515" begincolumn="17" endcolumn="9" rule="CyclomaticComplexity" ruleset="Design" package="com.idexcel.cync.los.entity.service.impl" class="EntityRelationshipTypeServiceImpl" method="updateReverseRelation" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#cyclomaticcomplexity" priority="3">
The method 'updateReverseRelation(EntityRelationshipType, EntityRelationshipType)' has a cyclomatic complexity of 10.
</violation>
<violation beginline="573" endline="617" begincolumn="16" endcolumn="9" rule="CyclomaticComplexity" ruleset="Design" package="com.idexcel.cync.los.entity.service.impl" class="EntityRelationshipTypeServiceImpl" method="findEntityRelationTreeByParentEntityId" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#cyclomaticcomplexity" priority="3">
The method 'findEntityRelationTreeByParentEntityId(String)' has a cyclomatic complexity of 10.
</violation>
<violation beginline="883" endline="934" begincolumn="17" endcolumn="9" rule="ModifiedCyclomaticComplexity" ruleset="Design" package="com.idexcel.cync.los.entity.service.impl" class="EntityRelationshipTypeServiceImpl" method="entityParentIsPresentSecondLeveIteration" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#modifiedcyclomaticcomplexity" priority="3">
The method 'entityParentIsPresentSecondLeveIteration' has a Modified Cyclomatic Complexity of 10.
</violation>
<violation beginline="883" endline="934" begincolumn="17" endcolumn="9" rule="StdCyclomaticComplexity" ruleset="Design" package="com.idexcel.cync.los.entity.service.impl" class="EntityRelationshipTypeServiceImpl" method="entityParentIsPresentSecondLeveIteration" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#stdcyclomaticcomplexity" priority="3">
The method 'entityParentIsPresentSecondLeveIteration' has a Standard Cyclomatic Complexity of 10.
</violation>
</file>
<file name="/Users/hrishi94/Github/los-entity-service/src/main/java/com/idexcel/cync/los/entity/service/impl/FinancialServiceImpl.java">
<violation beginline="49" endline="49" begincolumn="31" endcolumn="39" rule="ImmutableField" ruleset="Design" package="com.idexcel.cync.los.entity.service.impl" class="FinancialServiceImpl" variable="errorMsgs" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#immutablefield" priority="3">
Private field 'errorMsgs' could be made final; it is only initialized in the declaration or constructor.
</violation>
<violation beginline="50" endline="50" begincolumn="37" endcolumn="55" rule="ImmutableField" ruleset="Design" package="com.idexcel.cync.los.entity.service.impl" class="FinancialServiceImpl" variable="financialRepository" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#immutablefield" priority="3">
Private field 'financialRepository' could be made final; it is only initialized in the declaration or constructor.
</violation>
<violation beginline="51" endline="51" begincolumn="37" endcolumn="55" rule="ImmutableField" ruleset="Design" package="com.idexcel.cync.los.entity.service.impl" class="FinancialServiceImpl" variable="losConfigRepository" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#immutablefield" priority="3">
Private field 'losConfigRepository' could be made final; it is only initialized in the declaration or constructor.
</violation>
<violation beginline="52" endline="52" begincolumn="44" endcolumn="69" rule="ImmutableField" ruleset="Design" package="com.idexcel.cync.los.entity.service.impl" class="FinancialServiceImpl" variable="entityTypeLookupRepository" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#immutablefield" priority="3">
Private field 'entityTypeLookupRepository' could be made final; it is only initialized in the declaration or constructor.
</violation>
<violation beginline="53" endline="53" begincolumn="44" endcolumn="69" rule="ImmutableField" ruleset="Design" package="com.idexcel.cync.los.entity.service.impl" class="FinancialServiceImpl" variable="individualEntityRepository" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#immutablefield" priority="3">
Private field 'individualEntityRepository' could be made final; it is only initialized in the declaration or constructor.
</violation>
<violation beginline="54" endline="54" begincolumn="44" endcolumn="69" rule="ImmutableField" ruleset="Design" package="com.idexcel.cync.los.entity.service.impl" class="FinancialServiceImpl" variable="commercialEntityRepository" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#immutablefield" priority="3">
Private field 'commercialEntityRepository' could be made final; it is only initialized in the declaration or constructor.
</violation>
<violation beginline="55" endline="55" begincolumn="47" endcolumn="75" rule="ImmutableField" ruleset="Design" package="com.idexcel.cync.los.entity.service.impl" class="FinancialServiceImpl" variable="financialServiceImplValidator" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#immutablefield" priority="3">
Private field 'financialServiceImplValidator' could be made final; it is only initialized in the declaration or constructor.
</violation>
<violation beginline="155" endline="203" begincolumn="16" endcolumn="9" rule="CyclomaticComplexity" ruleset="Design" package="com.idexcel.cync.los.entity.service.impl" class="FinancialServiceImpl" method="searchEntityByName" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#cyclomaticcomplexity" priority="3">
The method 'searchEntityByName(String)' has a cyclomatic complexity of 11.
</violation>
</file>
<file name="/Users/hrishi94/Github/los-entity-service/src/main/java/com/idexcel/cync/los/entity/service/impl/StateLookupServiceImpl.java">
<violation beginline="20" endline="20" begincolumn="39" endcolumn="59" rule="ImmutableField" ruleset="Design" package="com.idexcel.cync.los.entity.service.impl" class="StateLookupServiceImpl" variable="stateLookupRepository" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#immutablefield" priority="3">
Private field 'stateLookupRepository' could be made final; it is only initialized in the declaration or constructor.
</violation>
<violation beginline="21" endline="21" begincolumn="41" endcolumn="63" rule="ImmutableField" ruleset="Design" package="com.idexcel.cync.los.entity.service.impl" class="StateLookupServiceImpl" variable="fSCountryStateValidator" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#immutablefield" priority="3">
Private field 'fSCountryStateValidator' could be made final; it is only initialized in the declaration or constructor.
</violation>
</file>
<file name="/Users/hrishi94/Github/los-entity-service/src/main/java/com/idexcel/cync/los/entity/validator/EntityRelationshipValidatorService.java">
<violation beginline="69" endline="113" begincolumn="16" endcolumn="9" rule="CyclomaticComplexity" ruleset="Design" package="com.idexcel.cync.los.entity.validator" class="EntityRelationshipValidatorService" method="isValidEntityRelation" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#cyclomaticcomplexity" priority="3">
The method 'isValidEntityRelation(EntityRelationshipType, String)' has a cyclomatic complexity of 17.
</violation>
<violation beginline="69" endline="113" begincolumn="16" endcolumn="9" rule="NPathComplexity" ruleset="Design" package="com.idexcel.cync.los.entity.validator" class="EntityRelationshipValidatorService" method="isValidEntityRelation" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#npathcomplexity" priority="3">
The method 'isValidEntityRelation(EntityRelationshipType, String)' has an NPath complexity of 256
</violation>
<violation beginline="115" endline="130" begincolumn="16" endcolumn="9" rule="CyclomaticComplexity" ruleset="Design" package="com.idexcel.cync.los.entity.validator" class="EntityRelationshipValidatorService" method="validateEntityReverseRelationCombination" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#cyclomaticcomplexity" priority="3">
The method 'validateEntityReverseRelationCombination(String, EntityRelationshipType)' has a cyclomatic complexity of 11.
</violation>
<violation beginline="138" endline="170" begincolumn="16" endcolumn="9" rule="CyclomaticComplexity" ruleset="Design" package="com.idexcel.cync.los.entity.validator" class="EntityRelationshipValidatorService" method="validateEntityRelationCombination" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#cyclomaticcomplexity" priority="3">
The method 'validateEntityRelationCombination(String, EntityRelationshipType)' has a cyclomatic complexity of 22.
</violation>
</file>
<file name="/Users/hrishi94/Github/los-entity-service/src/main/java/com/idexcel/cync/los/entity/validator/FSCountryStateValidator.java">
<violation beginline="28" endline="28" begincolumn="41" endcolumn="63" rule="ImmutableField" ruleset="Design" package="com.idexcel.cync.los.entity.validator" class="FSCountryStateValidator" variable="countryLookupRepository" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#immutablefield" priority="3">
Private field 'countryLookupRepository' could be made final; it is only initialized in the declaration or constructor.
</violation>
<violation beginline="29" endline="29" begincolumn="39" endcolumn="59" rule="ImmutableField" ruleset="Design" package="com.idexcel.cync.los.entity.validator" class="FSCountryStateValidator" variable="stateLookupRepository" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#immutablefield" priority="3">
Private field 'stateLookupRepository' could be made final; it is only initialized in the declaration or constructor.
</violation>
<violation beginline="45" endline="69" begincolumn="16" endcolumn="9" rule="CyclomaticComplexity" ruleset="Design" package="com.idexcel.cync.los.entity.validator" class="FSCountryStateValidator" method="isCountryStateNullOrNot" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#cyclomaticcomplexity" priority="3">
The method 'isCountryStateNullOrNot(FinancialEntity)' has a cyclomatic complexity of 13.
</violation>
</file>
<file name="/Users/hrishi94/Github/los-entity-service/src/main/java/com/idexcel/cync/los/entity/validator/FinancialServiceImplValidator.java">
<violation beginline="44" endline="44" begincolumn="37" endcolumn="55" rule="ImmutableField" ruleset="Design" package="com.idexcel.cync.los.entity.validator" class="FinancialServiceImplValidator" variable="financialRepository" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#immutablefield" priority="3">
Private field 'financialRepository' could be made final; it is only initialized in the declaration or constructor.
</violation>
<violation beginline="45" endline="45" begincolumn="40" endcolumn="61" rule="ImmutableField" ruleset="Design" package="com.idexcel.cync.los.entity.validator" class="FinancialServiceImplValidator" variable="configLookupRepository" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#immutablefield" priority="3">
Private field 'configLookupRepository' could be made final; it is only initialized in the declaration or constructor.
</violation>
<violation beginline="46" endline="46" begincolumn="33" endcolumn="47" rule="ImmutableField" ruleset="Design" package="com.idexcel.cync.los.entity.validator" class="FinancialServiceImplValidator" variable="clientValidator" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#immutablefield" priority="3">
Private field 'clientValidator' could be made final; it is only initialized in the declaration or constructor.
</violation>
<violation beginline="47" endline="47" begincolumn="41" endcolumn="63" rule="ImmutableField" ruleset="Design" package="com.idexcel.cync.los.entity.validator" class="FinancialServiceImplValidator" variable="fSCountryStateValidator" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#immutablefield" priority="3">
Private field 'fSCountryStateValidator' could be made final; it is only initialized in the declaration or constructor.
</violation>
<violation beginline="66" endline="95" begincolumn="16" endcolumn="9" rule="CyclomaticComplexity" ruleset="Design" package="com.idexcel.cync.los.entity.validator" class="FinancialServiceImplValidator" method="isValidEntity" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#cyclomaticcomplexity" priority="3">
The method 'isValidEntity(FinancialEntity, LosConfig)' has a cyclomatic complexity of 12.
</violation>
<violation beginline="103" endline="124" begincolumn="16" endcolumn="9" rule="CyclomaticComplexity" ruleset="Design" package="com.idexcel.cync.los.entity.validator" class="FinancialServiceImplValidator" method="isValidRM" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_design.html#cyclomaticcomplexity" priority="3">
The method 'isValidRM(FinancialEntity)' has a cyclomatic complexity of 11.
</violation>
</file>
<file name="/Users/hrishi94/Github/los-entity-service/target/generated-sources/annotations/com/idexcel/cync/los/entity/mapper/FinancialEntityMapperImpl.java">
<violation beginline="33" endline="33" begincolumn="71" endcolumn="82" rule="AvoidDuplicateLiterals" ruleset="Error Prone" package="com.idexcel.cync.los.entity.mapper" class="FinancialEntityMapperImpl" method="toIndividualEntityDto" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_errorprone.html#avoidduplicateliterals" priority="3">
The String literal &quot;MM/dd/yyyy&quot; appears 4 times in this file; the first occurrence is on line 33
</violation>
<violation beginline="33" endline="33" begincolumn="49" endcolumn="84" rule="SimpleDateFormatNeedsLocale" ruleset="Error Prone" package="com.idexcel.cync.los.entity.mapper" class="FinancialEntityMapperImpl" method="toIndividualEntityDto" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_errorprone.html#simpledateformatneedslocale" priority="3">
When instantiating a SimpleDateFormat object, specify a Locale
</violation>
<violation beginline="67" endline="67" begincolumn="54" endcolumn="89" rule="SimpleDateFormatNeedsLocale" ruleset="Error Prone" package="com.idexcel.cync.los.entity.mapper" class="FinancialEntityMapperImpl" method="toCommercialEntityDto" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_errorprone.html#simpledateformatneedslocale" priority="3">
When instantiating a SimpleDateFormat object, specify a Locale
</violation>
<violation beginline="98" endline="98" begincolumn="59" endcolumn="94" rule="SimpleDateFormatNeedsLocale" ruleset="Error Prone" package="com.idexcel.cync.los.entity.mapper" class="FinancialEntityMapperImpl" method="toIndividualFinancialEntity" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_errorprone.html#simpledateformatneedslocale" priority="3">
When instantiating a SimpleDateFormat object, specify a Locale
</violation>
<violation beginline="137" endline="137" begincolumn="55" endcolumn="90" rule="SimpleDateFormatNeedsLocale" ruleset="Error Prone" package="com.idexcel.cync.los.entity.mapper" class="FinancialEntityMapperImpl" method="toCommercialEntity" externalInfoUrl="https://pmd.github.io/pmd-6.13.0/pmd_rules_java_errorprone.html#simpledateformatneedslocale" priority="3">
When instantiating a SimpleDateFormat object, specify a Locale
</violation>
</file>
</pmd>
