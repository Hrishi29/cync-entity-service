version: 0.2
env:
  parameter-store:
    Login: Sonartoken
    Host: SonarHost
    Username: SonarUsername
    Password: SonarPassword
    Project: SonarProjectEntity
phases:
  install:
    runtime-versions:
      java: openjdk8
    commands:
      - echo Initialized CodePipleine for Cync-Los-Entity-Service
      - java -version 
      - mvn clean install
      # - npm install
      # - npm run env && npm run build
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
      - REPOSITORY_URI=$TemplateURL
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...         
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:latest
      # - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
      - mvn package sonar:sonar -Dsonar.host.url=$Host -Dsonar.login=$Login -Dsonar.login=$Username -Dsonar.password=$Password
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:latest
      - echo Writing image definitions file...
      - aws ecs update-service --cluster $Cluster --service $Service --task-definition $TaskDefinition --force-new-deployment


  # artifacts:
  #   files: cync-entity-service.json
